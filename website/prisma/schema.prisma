generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // Uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // Uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // Used for migrations
}

enum Role {
  SUPER_ADMIN
  ADMIN
  MODERATOR
  USER
}

model User {
  id          Int        @id @default(autoincrement())
  role        Role       @default(USER) // User's role
  email       String     @unique // User's email address
  password    String // User's password (hashed)
  firstName   String // User's first name
  lastName    String // User's last name
  image       String? // URL of user's profile picture
  address     String? // User's address
  phoneNumber String? // User's phone number
  createdAt   DateTime   @default(now()) // Timestamp of user creation
  updatedAt   DateTime   @updatedAt // Timestamp of last update
  cartItems   CartItem[] // Items in user's cart
  favorites   Product[] // Products marked as favorites by the user
  comments    Comment[] // Comments made by the user
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String // Product's name
  description String // Product's description
  price       Float // Product's price
  images      String[] // URLs of product images
  category    Category   @relation(fields: [categoryId], references: [id]) // Category to which the product belongs
  categoryId  Int
  createdAt   DateTime   @default(now()) // Timestamp of product creation
  updatedAt   DateTime   @updatedAt // Timestamp of last update
  comments    Comment[] // Comments made on the product
  User        User?      @relation(fields: [userId], references: [id])
  userId      Int?
  CartItem    CartItem[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String // Category's name
  createdAt DateTime  @default(now()) // Timestamp of category creation
  updatedAt DateTime  @updatedAt // Timestamp of last update
  products  Product[] // Products belonging to the category
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String // Comment content
  rating    Int      @default(0) // Rating given by the user (0-5)
  createdAt DateTime @default(now()) // Timestamp of comment creation
  updatedAt DateTime @updatedAt // Timestamp of last update
  user      User     @relation(fields: [userId], references: [id]) // User who made the comment
  userId    Int
  product   Product  @relation(fields: [productId], references: [id]) // Product on which the comment was made
  productId Int
}

model CartItem {
  id        Int      @id @default(autoincrement())
  quantity  Int // Quantity of the product in the cart
  createdAt DateTime @default(now()) // Timestamp of cart item creation
  updatedAt DateTime @updatedAt // Timestamp of last update
  user      User     @relation(fields: [userId], references: [id]) // User who added the item to the cart
  userId    Int
  product   Product  @relation(fields: [productId], references: [id]) // Product in the cart
  productId Int
}
